// <auto-generated />
using System;
using EduRepo.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduRepo.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250414092643_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("EduRepo.Domain.Kurs", b =>
                {
                    b.Property<int>("IdKursu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyZarchiwizowany")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Klasa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OpisKursu")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RokAkademicki")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdKursu");

                    b.ToTable("Kursy");
                });

            modelBuilder.Entity("EduRepo.Domain.Odpowiedz", b =>
                {
                    b.Property<int>("IdOdpowiedzi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataOddania")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdZadania")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KomentarzNauczyciela")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NazwaPliku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ocena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ZadanieIdZadania")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdOdpowiedzi");

                    b.HasIndex("ZadanieIdZadania");

                    b.ToTable("Odpowiedzi");
                });

            modelBuilder.Entity("EduRepo.Domain.PowiadomienieBrakOdpowiedzi", b =>
                {
                    b.Property<int>("IdPowiadomienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyOdczytane")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPowiadomienia")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdZadania")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPowiadomienia");

                    b.ToTable("Powiadomienia");
                });

            modelBuilder.Entity("EduRepo.Domain.Zadanie", b =>
                {
                    b.Property<int>("IdZadania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyObowiazkowe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdKursu")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KursIdKursu")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlikPomocniczy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TerminOddania")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdZadania");

                    b.HasIndex("KursIdKursu");

                    b.ToTable("Zadania");
                });

            modelBuilder.Entity("EduRepo.Domain.Odpowiedz", b =>
                {
                    b.HasOne("EduRepo.Domain.Zadanie", null)
                        .WithMany("Odpowiedzi")
                        .HasForeignKey("ZadanieIdZadania");
                });

            modelBuilder.Entity("EduRepo.Domain.Zadanie", b =>
                {
                    b.HasOne("EduRepo.Domain.Kurs", null)
                        .WithMany("Zadania")
                        .HasForeignKey("KursIdKursu");
                });

            modelBuilder.Entity("EduRepo.Domain.Kurs", b =>
                {
                    b.Navigation("Zadania");
                });

            modelBuilder.Entity("EduRepo.Domain.Zadanie", b =>
                {
                    b.Navigation("Odpowiedzi");
                });
#pragma warning restore 612, 618
        }
    }
}
